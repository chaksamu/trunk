---
- name: Check process info
  shell: 'ps -ef | grep -v grep | grep -i "{{ process_info }}" | cat'
  register: process_info_check
  delegate_to: "{{ delegate_host }}"

- name: Get the Process info when actual process is running
  debug:
    msg:
      - "{{ app_name }} Process Info"
      - "-----------------"
      - "{{ process_info_check.stdout_lines }}"
  when: process_info in process_info_check.stdout

- name: Get the Process info when actual process is not running
  debug:
    msg:
      - "Process Info"
      - "-----------------"
      - "{{ app_name }} Not Running"
  when: process_info not in process_info_check.stdout

- name: Stop application  
  shell: >
         cd {{ software_installation_dir }}/{{ app_name }}/bin;
         ./shutdown.sh
         sleep 5;
  register: app_stop
  delegate_to: "{{ delegate_host }}"
  when: (version_result.stat.exists and process_info in process_info_check.stdout)

- name: Stop and status result
  debug: 
    msg: "{{ app_stop.stdout_lines }}"
  when: (version_result.stat.exists and process_info in process_info_check.stdout)

- name: Check process info
  shell: 'ps -ef | grep -v grep | grep -i "{{ process_info }}" | cat'
  register: process_info_check_after  
  delegate_to: "{{ delegate_host }}"

- name: Terminate if process is still running
  fail: 
    msg:
      - "{{ app_name }} IS STILL RUNNING  ::: "
      - "{{ process_info_check_after.stdout_lines }}"
  when: process_info in process_info_check_after.stdout
  
- name: Validated that the process is not running anymore.
  debug:
    msg: 
      - "Process Info"
      - "-----------------"
      - "Process Not Running"
  when: process_info not in process_info_check_after.stdout

- name: Create soft link {{ app_name }}
  shell: >
         cd {{ software_installation_dir }};
         ln -nfs {{ app_name }}-{{ pkg_name }} {{ app_name }}; 
  when: (version_result.stat.exists and pkg_name not in version_result.stat.lnk_target) or (not version_result.stat.exists)
  delegate_to: "{{ delegate_host }}"
  
- name: Start application
  shell: >
         cd {{ software_installation_dir }}/{{ app_name }}/bin;
         ./startup.sh
         sleep 10;
  delegate_to: "{{ delegate_host }}"

- name: Check process info
  shell: 'ps -ef | grep -v grep | grep -i "{{ process_info }}" | cat'
  register: process_info_check
  delegate_to: "{{ delegate_host }}"
  
- name: Final Check after Process Started Successfully.
  debug:
    msg: 
      - "{{ app_name }} Process Info"
      - "-----------------"
      - "{{ process_info_check.stdout_lines }}"
...
